{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;kCACUC,G,EAAK;AACjB,UAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,aAAOH,GAAP;AACD;;;wBACGI,G,EAAK;AAAA;;AACP,aAAOC,MAAMD,GAAN,EACJE,IADI,CACC;AAAA,eAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OADD,EAEJM,IAFI,CAEC;AAAA,eAAON,IAAIQ,IAAJ,EAAP;AAAA,OAFD,CAAP;AAGD;;;yBAEIJ,G,EAAKK,I,EAAM;AAAA;;AACd,aAAOJ,MAAMD,GAAN,EAAW;AACdM,iBAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,gBAAQ,MAFM;AAGdC,cAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,OAAX,EAKJH,IALI,CAKC;AAAA,eAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,OALD,CAAP;AAMD","file":"HttpService.js","sourcesContent":["class HttpService {\n  _handleErrors(res) {\n    if (!res.ok) throw new Error(res.statusText);\n    return res;\n  }\n  get(url) {\n    return fetch(url)\n      .then(res => this._handleErrors(res))\n      .then(res => res.json());\n  }\n\n  post(url, dado) {\n    return fetch(url, {\n        headers: { 'Content-type': 'application/json' },\n        method: 'post',\n        body: JSON.stringify(dado)\n      })\n      .then(res => this._handleErrors(res));\n  }\n}\n"]}